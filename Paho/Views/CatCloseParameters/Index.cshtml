@model PagedList.IPagedList<Paho.Models.CatCloseParameters>

@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    string labelCatalog = Paho.Controllers.ResourcesM.SgetMessage("msgCatalog", ViewBag.UsrCtry, ViewBag.UsrCtryLang);
    string labelCatalogName = Paho.Controllers.ResourcesM.SgetMessage("msgMenuCatCloseParametersView", ViewBag.UsrCtry, ViewBag.UsrCtryLang);
    string labelCreateNew = Paho.Controllers.ResourcesM.SgetMessage("msgViewCatPopulation_CrearNuevo", ViewBag.UsrCtry, ViewBag.UsrCtryLang);
    string labelSearchCriteria = Paho.Controllers.ResourcesM.SgetMessage("msgSearchCriteria", ViewBag.UsrCtry, ViewBag.UsrCtryLang);
    string labelSubmit = Paho.Controllers.ResourcesM.SgetMessage("viewHome_btnSearch", ViewBag.UsrCtry, ViewBag.UsrCtryLang);
    string labelEdit = Paho.Controllers.ResourcesM.SgetMessage("msgViewCatPopulation_Editar", ViewBag.UsrCtry, ViewBag.UsrCtryLang);
    string labelDelete = Paho.Controllers.ResourcesM.SgetMessage("msgViewCatPopulation_Borrar", ViewBag.UsrCtry, ViewBag.UsrCtryLang);
    string labelPage = Paho.Controllers.ResourcesM.SgetMessage("msgPage", ViewBag.UsrCtry, ViewBag.UsrCtryLang);
    string labelOf = Paho.Controllers.ResourcesM.SgetMessage("msgViewCatPopulation_De", ViewBag.UsrCtry, ViewBag.UsrCtryLang);

    ViewBag.Title = labelCatalog + " - " + labelCatalogName;
}

<h4>@(labelCatalog) - @(labelCatalogName)</h4>

<p>
    @Html.ActionLink(labelCreateNew, "Create", "CatCloseParameters", new { area = "" }, null)
</p>

@*@using (Html.BeginForm("Index", "CatReasonNotSampling", FormMethod.Get))
    {
        <p>
            @(labelSearchCriteria): @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <input type="submit" value=@(labelSubmit) />
        </p>
    }*@

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("ID", "Index", new { sortOrder = ViewBag.IDSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Surv", "Index", new { sortOrder = ViewBag.SpaSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Toma de muestra", "Index", new { sortOrder = ViewBag.SpaSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Procesado", "Index", new { sortOrder = ViewBag.SpaSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Lab. Final Cierre", "Index", new { sortOrder = ViewBag.SpaSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Fecha Egreso", "Index", new { sortOrder = ViewBag.SpaSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Diagnóstico Egreso", "Index", new { sortOrder = ViewBag.SpaSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SurvReg.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsSampleText)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProcessedText)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LabEndClosingText)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HospExDateText)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DiagEgText)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @*@Html.ActionLink("Details", "Details", new { id=item.Id }) |*@
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }
</table>

<br />
@(labelPage) @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @(labelOf) @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
