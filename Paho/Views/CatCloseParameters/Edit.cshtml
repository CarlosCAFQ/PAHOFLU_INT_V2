@model Paho.Models.CatCloseParameters

@{
    string labelCatalog = Paho.Controllers.ResourcesM.SgetMessage("msgCatalog", ViewBag.UsrCtry, ViewBag.UsrCtryLang);
    string labelCatalogName = Paho.Controllers.ResourcesM.SgetMessage("msgMenuCatCloseParametersView", ViewBag.UsrCtry, ViewBag.UsrCtryLang);
    string labelReturnToList = Paho.Controllers.ResourcesM.SgetMessage("msgReturnToList", ViewBag.UsrCtry, ViewBag.UsrCtryLang);
    string labelSave = Paho.Controllers.ResourcesM.SgetMessage("msgViewCatPopulation_Guardar", ViewBag.UsrCtry, ViewBag.UsrCtryLang);

    ViewBag.Title = labelCatalog + " - " + labelCatalogName;
}

@*<h2>Edit</h2>*@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@(labelCatalog) - @labelCatalogName</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Surv, htmlAttributes: new { @class = "control-label col-md-1_5" })
            <div class="col-md-7">
                @Html.DropDownListFor(model => model.Surv, new SelectList(Model.SurvRegCollection, "Id", "Description"), "-- Seleccione --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Surv, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsSample, htmlAttributes: new { @class = "control-label col-md-1_5" })
            <div class="col-md-7">
                @Html.DropDownList("IsSample", EnumHelper.GetSelectList(typeof(Paho.Models.BooleanTypeNA)), "-- Seleccione --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IsSample, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Processed, htmlAttributes: new { @class = "control-label col-md-1_5" })
            <div class="col-md-7">
                @Html.DropDownList("Processed", EnumHelper.GetSelectList(typeof(Paho.Models.BooleanTypeNA)), "-- Seleccione --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Processed, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LabEndClosing, htmlAttributes: new { @class = "control-label col-md-1_5" })
            <div class="col-md-7">
                @Html.DropDownList("LabEndClosing", EnumHelper.GetSelectList(typeof(Paho.Models.BooleanTypeNA)), "-- Seleccione --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LabEndClosing, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HospExDate, htmlAttributes: new { @class = "control-label col-md-1_5" })
            <div class="col-md-7">
                @Html.DropDownList("HospExDate", EnumHelper.GetSelectList(typeof(Paho.Models.BooleanTypeNA)), "-- Seleccione --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HospExDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiagEg, htmlAttributes: new { @class = "control-label col-md-1_5" })
            <div class="col-md-7">
                @Html.DropDownList("DiagEg", EnumHelper.GetSelectList(typeof(Paho.Models.BooleanTypeNA)), "-- Seleccione --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DiagEg, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@(labelSave) class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(@labelReturnToList, "Index")
</div>


